#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤–æ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
"""

import time
from advanced_streaming_asr import AdvancedStreamingASR, print_result, save_results_to_file


def custom_callback(text: str):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞"""
    print(f"üîä –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–∞—è —Ä–µ—á—å: {text}")
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    save_results_to_file(text, "my_transcriptions.txt")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    
    print("üé§ –ü–æ—Ç–æ–∫–æ–≤–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ —Å GigaAM")
    print("=" * 50)
    
    # –ü—Ä–∏–º–µ—Ä 1: –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
    print("\n1Ô∏è‚É£ –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
    streaming_asr = AdvancedStreamingASR(
        model_name="ctc",
        sample_rate=16000,
        silence_threshold=0.01,
        silence_duration=1.0,
        callback=print_result,
        verbose=True
    )
    
    try:
        streaming_asr.start()
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞...")
    finally:
        streaming_asr.stop()
    
    # –ü—Ä–∏–º–µ—Ä 2: –° —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ —Ñ–∞–π–ª
    print("\n2Ô∏è‚É£ –° —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Ñ–∞–π–ª:")
    streaming_asr2 = AdvancedStreamingASR(
        model_name="ctc",
        sample_rate=16000,
        silence_threshold=0.015,  # –ë–æ–ª–µ–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∫ —Ç–∏—à–∏–Ω–µ
        silence_duration=0.8,     # –ë—ã—Å—Ç—Ä–µ–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Ç–∏—à–∏–Ω—É
        min_audio_duration=1.0,   # –ú–∏–Ω–∏–º—É–º 1 —Å–µ–∫—É–Ω–¥–∞
        max_audio_duration=15.0,  # –ú–∞–∫—Å–∏–º—É–º 15 —Å–µ–∫—É–Ω–¥
        callback=custom_callback,
        verbose=True
    )
    
    try:
        streaming_asr2.start()
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞...")
    finally:
        streaming_asr2.stop()
    
    # –ü—Ä–∏–º–µ—Ä 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
    print("\n3Ô∏è‚É£ –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ:")
    streaming_asr3 = AdvancedStreamingASR(
        model_name="ctc",
        sample_rate=16000,
        silence_threshold=0.02,    # –ú–µ–Ω–µ–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π
        silence_duration=0.5,      # –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        min_audio_duration=0.3,    # –ö–æ—Ä–æ—Ç–∫–∏–µ —Ñ—Ä–∞–∑—ã
        max_audio_duration=10.0,   # –ù–µ –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–µ
        callback=lambda text: print(f"‚ö° {text}"),
        verbose=False  # –ú–µ–Ω—å—à–µ –≤—ã–≤–æ–¥–∞
    )
    
    try:
        streaming_asr3.start()
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞...")
    finally:
        streaming_asr3.stop()


if __name__ == "__main__":
    main() 